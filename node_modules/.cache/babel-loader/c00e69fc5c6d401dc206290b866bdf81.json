{"ast":null,"code":"var _jsxFileName = \"/Users/luciaruedalaje/Desktop/PI-Pokemon-main/client/src/components/Pokemons.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { getPoke, goToPageOne } from \"../actions/index\";\nimport Pokemon from \"./Pokemon\";\nimport Paginado from \"./Paginado\";\nimport a from \"../img/loading.gif\";\nimport no from \"../img/pikachu-triste.gif\";\nimport s from \"../components/Pokemons.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Pokemons() {\n  _s();\n\n  var rawPoke = useSelector(state => state.pokemons);\n  var page = useSelector(state => state.currentPage); // const [currentPage, setCurrentPage] = useState(1);\n\n  const [pokemonsPerPage] = useState(12); // personajes por pag\n\n  const indexOfLastPokemon = page * pokemonsPerPage; // 12\n\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage; //12-12 =0\n\n  var pokemons = useSelector(state => state.filteredPokemons);\n  if (pokemons) console.log(\"ver\", pokemons.results);\n  var currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon); //personajes en la pagina actual, divide el arreglo pokemons del 0 al 12\n  // setea el estado de la pagina actual, me ayuda en el renderizado\n\n  const paginado = pageNumber => {\n    dispatch(goToPageOne(pageNumber));\n  };\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPoke());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rawPoke && rawPoke.length ? currentPokemons && currentPokemons.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.cards,\n          children: currentPokemons.map(pokemon => {\n            var _pokemon$types, _pokemon$types2, _pokemon$types3, _pokemon$types4;\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Pokemon, {\n                id: pokemon.id,\n                name: pokemon.name,\n                img: pokemon.img,\n                types: !((_pokemon$types = pokemon.types) === null || _pokemon$types === void 0 ? void 0 : _pokemon$types[1]) ? (_pokemon$types2 = pokemon.types) === null || _pokemon$types2 === void 0 ? void 0 : _pokemon$types2[0] : ((_pokemon$types3 = pokemon.types) === null || _pokemon$types3 === void 0 ? void 0 : _pokemon$types3[1]) + \" \" + ((_pokemon$types4 = pokemon.types) === null || _pokemon$types4 === void 0 ? void 0 : _pokemon$types4[0]),\n                attack: pokemon.attack\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 23\n              }, this)\n            }, pokemon.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Paginado, {\n          pokemonPerPage: pokemonsPerPage,\n          pokemons: pokemons.length,\n          paginado: paginado\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Pokemon not found \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: no,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading ... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: a,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pokemons, \"s040AeVVIHfkJ10pjKrZynq2xAQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Pokemons;\nexport default Pokemons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemons\");","map":{"version":3,"sources":["/Users/luciaruedalaje/Desktop/PI-Pokemon-main/client/src/components/Pokemons.js"],"names":["React","useEffect","useDispatch","useSelector","useState","getPoke","goToPageOne","Pokemon","Paginado","a","no","s","Pokemons","rawPoke","state","pokemons","page","currentPage","pokemonsPerPage","indexOfLastPokemon","indexOfFirstPokemon","filteredPokemons","console","log","results","currentPokemons","slice","paginado","pageNumber","dispatch","length","cards","map","pokemon","id","name","img","types","attack"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { getPoke, goToPageOne } from \"../actions/index\";\nimport Pokemon from \"./Pokemon\";\nimport Paginado from \"./Paginado\";\nimport a from \"../img/loading.gif\";\nimport no from \"../img/pikachu-triste.gif\";\nimport s from \"../components/Pokemons.module.css\";\n\nexport function Pokemons() {\n  var rawPoke = useSelector((state) => state.pokemons);\n  var page = useSelector((state) => state.currentPage);\n  // const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage] = useState(12); // personajes por pag\n  const indexOfLastPokemon = page * pokemonsPerPage; // 12\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage; //12-12 =0\n  var pokemons = useSelector((state) => state.filteredPokemons);\n  if (pokemons) console.log(\"ver\", pokemons.results);\n  var currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon); //personajes en la pagina actual, divide el arreglo pokemons del 0 al 12\n  // setea el estado de la pagina actual, me ayuda en el renderizado\n  const paginado = (pageNumber) => {\n    dispatch(goToPageOne(pageNumber));\n  };\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPoke());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {/* <div className={s.back} style={{ backgroundImage: `url(${img})` }}> */}\n      <div>\n        {rawPoke && rawPoke.length ? (\n          currentPokemons && currentPokemons.length ? (\n            <div>\n              <div className={s.cards}>\n                {currentPokemons.map((pokemon) => {\n                  return (\n                    <div key={pokemon.id}>\n                      <Pokemon\n                        id={pokemon.id}\n                        name={pokemon.name}\n                        img={pokemon.img}\n                        types={\n                          !pokemon.types?.[1]\n                            ? pokemon.types?.[0]\n                            : pokemon.types?.[1] + \" \" + pokemon.types?.[0]\n                        }\n                        attack={pokemon.attack}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n              <Paginado\n                pokemonPerPage={pokemonsPerPage}\n                pokemons={pokemons.length}\n                paginado={paginado}\n              />\n            </div>\n          ) : (\n            <div>\n              <h1> Pokemon not found </h1>\n              <img src={no} alt=\"\" />\n            </div>\n          )\n        ) : (\n          <div>\n            <h1>Loading ... </h1>\n            <img src={a} alt=\"\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Pokemons;\n"]},"metadata":{},"sourceType":"module"}