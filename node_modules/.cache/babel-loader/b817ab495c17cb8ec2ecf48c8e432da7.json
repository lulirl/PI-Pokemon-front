{"ast":null,"code":"var _jsxFileName = \"/Users/luciaruedalaje/Desktop/PI-Pokemon-main/client/src/components/Pokemons.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { getPoke } from \"../actions/index\";\nimport Pokemon from \"./Pokemon\";\nimport Paginado from \"./Paginado\";\nimport a from \"../img/Voltorb.gif\";\nimport s from \"../components/Pokemons.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Pokemons() {\n  _s();\n\n  var pokemons = useSelector(state => state.filteredPokemons);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage] = useState(12);\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  if (pokemons) var currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPoke());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentPokemons && currentPokemons.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.cards,\n        children: currentPokemons.map(pokemon => {\n          var _pokemon$types;\n\n          console.log(currentPokemons);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Pokemon, {\n              id: pokemon.id,\n              name: pokemon.name,\n              img: pokemon.img,\n              types: \"Type: \" + pokemon.types[0] + \" \" + ((_pokemon$types = pokemon.types) === null || _pokemon$types === void 0 ? void 0 : _pokemon$types[1]),\n              attack: pokemon.attack\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paginado, {\n        pokemonPerPage: pokemonsPerPage,\n        pokemons: pokemons.length,\n        paginado: paginado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: a,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pokemons, \"aX2nowdMemElHBhWnAojZpo9+rw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Pokemons;\nexport default Pokemons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemons\");","map":{"version":3,"sources":["/Users/luciaruedalaje/Desktop/PI-Pokemon-main/client/src/components/Pokemons.js"],"names":["React","useEffect","useDispatch","useSelector","useState","getPoke","Pokemon","Paginado","a","s","Pokemons","pokemons","state","filteredPokemons","currentPage","setCurrentPage","pokemonsPerPage","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","paginado","pageNumber","dispatch","length","cards","map","pokemon","console","log","id","name","img","types","attack"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,CAAP,MAAc,oBAAd;AAEA,OAAOC,CAAP,MAAc,mCAAd;;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACzB,MAAIC,QAAQ,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,gBAAlB,CAA1B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACY,eAAD,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMa,kBAAkB,GAAGH,WAAW,GAAGE,eAAzC;AACA,QAAME,mBAAmB,GAAGD,kBAAkB,GAAGD,eAAjD;AACA,MAAIL,QAAJ,EACE,IAAIQ,eAAe,GAAGR,QAAQ,CAACS,KAAT,CACpBF,mBADoB,EAEpBD,kBAFoB,CAAtB;;AAIF,QAAMI,QAAQ,GAAIC,UAAD,IAAgB;AAC/BP,IAAAA,cAAc,CAACO,UAAD,CAAd;AACD,GAFD;;AAIA,MAAIC,QAAQ,GAAGrB,WAAW,EAA1B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,QAAQ,CAAClB,OAAO,EAAR,CAAR;AACD,GAFQ,EAEN,CAACkB,QAAD,CAFM,CAAT;AAIA,sBACE;AAAA,cACGJ,eAAe,IAAIA,eAAe,CAACK,MAAnC,gBACC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEf,CAAC,CAACgB,KAAlB;AAAA,kBACGN,eAAe,CAACO,GAAhB,CAAqBC,OAAD,IAAa;AAAA;;AAChCC,UAAAA,OAAO,CAACC,GAAR,CAAYV,eAAZ;AACA,8BACE;AAAA,mCACE,QAAC,OAAD;AACE,cAAA,EAAE,EAAEQ,OAAO,CAACG,EADd;AAEE,cAAA,IAAI,EAAEH,OAAO,CAACI,IAFhB;AAGE,cAAA,GAAG,EAAEJ,OAAO,CAACK,GAHf;AAIE,cAAA,KAAK,EACH,WAAWL,OAAO,CAACM,KAAR,CAAc,CAAd,CAAX,GAA8B,GAA9B,sBAAoCN,OAAO,CAACM,KAA5C,mDAAoC,eAAgB,CAAhB,CAApC,CALJ;AAOE,cAAA,MAAM,EAAEN,OAAO,CAACO;AAPlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAaD,SAfA;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAmBE,QAAC,QAAD;AACE,QAAA,cAAc,EAAElB,eADlB;AAEE,QAAA,QAAQ,EAAEL,QAAQ,CAACa,MAFrB;AAGE,QAAA,QAAQ,EAAEH;AAHZ;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBA2BC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAEb,CAAV;AAAa,QAAA,GAAG,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BJ;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GAxDeE,Q;UACCP,W,EAcAD,W;;;KAfDQ,Q;AA0DhB,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { getPoke } from \"../actions/index\";\nimport Pokemon from \"./Pokemon\";\nimport Paginado from \"./Paginado\";\nimport a from \"../img/Voltorb.gif\";\n\nimport s from \"../components/Pokemons.module.css\";\n\nexport function Pokemons() {\n  var pokemons = useSelector((state) => state.filteredPokemons);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage] = useState(12);\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  if (pokemons)\n    var currentPokemons = pokemons.slice(\n      indexOfFirstPokemon,\n      indexOfLastPokemon\n    );\n  const paginado = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPoke());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {currentPokemons && currentPokemons.length ? (\n        <div>\n          <div className={s.cards}>\n            {currentPokemons.map((pokemon) => {\n              console.log(currentPokemons);\n              return (\n                <div>\n                  <Pokemon\n                    id={pokemon.id}\n                    name={pokemon.name}\n                    img={pokemon.img}\n                    types={\n                      \"Type: \" + pokemon.types[0] + \" \" + pokemon.types?.[1]\n                    }\n                    attack={pokemon.attack}\n                  />\n                </div>\n              );\n            })}\n          </div>\n          <Paginado\n            pokemonPerPage={pokemonsPerPage}\n            pokemons={pokemons.length}\n            paginado={paginado}\n          />\n        </div>\n      ) : (\n        <div>\n          <span>Loading ...</span>\n          <img src={a} alt=\"\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Pokemons;\n"]},"metadata":{},"sourceType":"module"}