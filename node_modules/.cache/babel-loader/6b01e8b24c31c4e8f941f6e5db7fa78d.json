{"ast":null,"code":"var _jsxFileName = \"/Users/luciaruedalaje/Desktop/PI-Pokemon-main/client/src/components/Pokemons.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { getPoke } from \"../actions/index\";\nimport Pokemon from \"./Pokemon\";\nimport Paginado from \"./Paginado\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Pokemons() {\n  _s();\n\n  var pokemons = useSelector(state => state.filteredPokemons);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(12);\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  var currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPoke());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Paginado, {\n      pokemonPerPage: pokemonsPerPage,\n      pokemons: pokemons.length,\n      paginado: paginado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentPokemons.map(pokemon => {\n        return /*#__PURE__*/_jsxDEV(Pokemon, {\n          name: pokemon.name,\n          img: pokemon.img,\n          types: \"Type:\" + pokemon.types + \" \",\n          attack: pokemon.attack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pokemons, \"fjejv4I/TQ+kdTpUnGslbm7apNA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Pokemons;\nexport default Pokemons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemons\");","map":{"version":3,"sources":["/Users/luciaruedalaje/Desktop/PI-Pokemon-main/client/src/components/Pokemons.js"],"names":["React","useEffect","useDispatch","useSelector","useState","getPoke","Pokemon","Paginado","Pokemons","pokemons","state","filteredPokemons","currentPage","setCurrentPage","pokemonsPerPage","setPokemonsPerPage","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","paginado","pageNumber","dispatch","length","map","pokemon","name","img","types","attack"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AACA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACzB,MAAIC,QAAQ,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,gBAAlB,CAA1B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMY,kBAAkB,GAAGJ,WAAW,GAAGE,eAAzC;AACA,QAAMG,mBAAmB,GAAGD,kBAAkB,GAAGF,eAAjD;AACA,MAAII,eAAe,GAAGT,QAAQ,CAACU,KAAT,CAAeF,mBAAf,EAAoCD,kBAApC,CAAtB;;AACA,QAAMI,QAAQ,GAAIC,UAAD,IAAgB;AAC/BR,IAAAA,cAAc,CAACQ,UAAD,CAAd;AACD,GAFD;;AAGA,MAAIC,QAAQ,GAAGpB,WAAW,EAA1B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,QAAQ,CAACjB,OAAO,EAAR,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,cAAc,EAAES,eADlB;AAEE,MAAA,QAAQ,EAAEL,QAAQ,CAACc,MAFrB;AAGE,MAAA,QAAQ,EAAEH;AAHZ;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,gBACGF,eAAe,CAACM,GAAhB,CAAqBC,OAAD,IAAa;AAChC,4BACE,QAAC,OAAD;AACE,UAAA,IAAI,EAAEA,OAAO,CAACC,IADhB;AAEE,UAAA,GAAG,EAAED,OAAO,CAACE,GAFf;AAGE,UAAA,KAAK,EAAE,UAAUF,OAAO,CAACG,KAAlB,GAA0B,GAHnC;AAIE,UAAA,MAAM,EAAEH,OAAO,CAACI;AAJlB;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GArCerB,Q;UACCL,W,EASAD,W;;;KAVDM,Q;AAsChB,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { getPoke } from \"../actions/index\";\nimport Pokemon from \"./Pokemon\";\nimport Paginado from \"./Paginado\";\nexport function Pokemons() {\n  var pokemons = useSelector((state) => state.filteredPokemons);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(12);\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  var currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n  const paginado = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPoke());\n  }, []);\n\n  return (\n    <div>\n      <Paginado\n        pokemonPerPage={pokemonsPerPage}\n        pokemons={pokemons.length}\n        paginado={paginado}\n      />\n\n      <div>\n        {currentPokemons.map((pokemon) => {\n          return (\n            <Pokemon\n              name={pokemon.name}\n              img={pokemon.img}\n              types={\"Type:\" + pokemon.types + \" \"}\n              attack={pokemon.attack}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\nexport default Pokemons;\n"]},"metadata":{},"sourceType":"module"}