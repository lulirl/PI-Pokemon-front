{"ast":null,"code":"var _jsxFileName = \"/Users/luciaruedalaje/Desktop/PI-Pokemon-main/client/src/components/Pokemons.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPoke } from \"../actions/index\";\nimport Pokemon from \"./Pokemon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Pokemons() {\n  _s();\n\n  var pokemons = useSelector(state => state.filteredPokemons);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(12);\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPoke());\n  }, []);\n  console.log(pokemons);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentPokemons.map(pokemon => {\n      return /*#__PURE__*/_jsxDEV(Pokemon, {\n        name: pokemon.name,\n        img: pokemon.img,\n        types: pokemon.types,\n        attack: pokemon.attack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pokemons, \"fjejv4I/TQ+kdTpUnGslbm7apNA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Pokemons;\nexport default Pokemons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemons\");","map":{"version":3,"sources":["/Users/luciaruedalaje/Desktop/PI-Pokemon-main/client/src/components/Pokemons.js"],"names":["React","useEffect","useDispatch","useSelector","getPoke","Pokemon","Pokemons","pokemons","state","filteredPokemons","currentPage","setCurrentPage","useState","pokemonsPerPage","setPokemonsPerPage","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","paginado","pageNumber","dispatch","console","log","map","pokemon","name","img","types","attack"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACzB,MAAIC,QAAQ,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,gBAAlB,CAA1B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCF,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMG,kBAAkB,GAAGL,WAAW,GAAGG,eAAzC;AACA,QAAMG,mBAAmB,GAAGD,kBAAkB,GAAGF,eAAjD;AACA,QAAMI,eAAe,GAAGV,QAAQ,CAACW,KAAT,CACtBF,mBADsB,EAEtBD,kBAFsB,CAAxB;;AAIA,QAAMI,QAAQ,GAAIC,UAAD,IAAgB;AAC/BT,IAAAA,cAAc,CAACS,UAAD,CAAd;AACD,GAFD;;AAGA,MAAIC,QAAQ,GAAGnB,WAAW,EAA1B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,QAAQ,CAACjB,OAAO,EAAR,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAGAkB,EAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ;AACA,sBACE;AAAA,cACGU,eAAe,CAACO,GAAhB,CAAqBC,OAAD,IAAa;AAChC,0BACE,QAAC,OAAD;AACE,QAAA,IAAI,EAAEA,OAAO,CAACC,IADhB;AAEE,QAAA,GAAG,EAAED,OAAO,CAACE,GAFf;AAGE,QAAA,KAAK,EAAEF,OAAO,CAACG,KAHjB;AAIE,QAAA,MAAM,EAAEH,OAAO,CAACI;AAJlB;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAhCevB,Q;UACCH,W,EAYAD,W;;;KAbDI,Q;AAiChB,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPoke } from \"../actions/index\";\nimport Pokemon from \"./Pokemon\";\nexport function Pokemons() {\n  var pokemons = useSelector((state) => state.filteredPokemons);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(12);\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = pokemons.slice(\n    indexOfFirstPokemon,\n    indexOfLastPokemon\n  );\n  const paginado = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPoke());\n  }, []);\n  console.log(pokemons);\n  return (\n    <div>\n      {currentPokemons.map((pokemon) => {\n        return (\n          <Pokemon\n            name={pokemon.name}\n            img={pokemon.img}\n            types={pokemon.types}\n            attack={pokemon.attack}\n          />\n        );\n      })}\n    </div>\n  );\n}\nexport default Pokemons;\n"]},"metadata":{},"sourceType":"module"}