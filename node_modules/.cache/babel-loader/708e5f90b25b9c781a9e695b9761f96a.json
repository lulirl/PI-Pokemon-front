{"ast":null,"code":"var _jsxFileName = \"/Users/luciaruedalaje/Desktop/PI-Pokemon-main/client/src/components/Pokemons.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { getPoke } from \"../actions/index\";\nimport Pokemon from \"./Pokemon\";\nimport Paginado from \"./Paginado\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"../components/Pokemons.module.css\";\nimport logo from \"../img/Pokemon-Logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Pokemons() {\n  _s();\n\n  var pokemons = useSelector(state => state.filteredPokemons);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(12);\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  if (pokemons) var currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPoke());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ul\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"img\",\n        src: logo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/pokemons/create/poke\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: s.button,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paginado, {\n      pokemonPerPage: pokemonsPerPage,\n      pokemons: pokemons.length,\n      paginado: paginado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.cards,\n      children: currentPokemons.map(pokemon => {\n        console.log(currentPokemons);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Pokemon, {\n            id: pokemon.id,\n            name: pokemon.name,\n            img: pokemon.img,\n            types: \"Type: \" + pokemon.types + \" \",\n            attack: pokemon.attack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pokemons, \"fjejv4I/TQ+kdTpUnGslbm7apNA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Pokemons;\nexport default Pokemons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemons\");","map":{"version":3,"sources":["/Users/luciaruedalaje/Desktop/PI-Pokemon-main/client/src/components/Pokemons.js"],"names":["React","useEffect","useDispatch","useSelector","useState","getPoke","Pokemon","Paginado","NavLink","s","logo","Pokemons","pokemons","state","filteredPokemons","currentPage","setCurrentPage","pokemonsPerPage","setPokemonsPerPage","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","paginado","pageNumber","dispatch","button","length","cards","map","pokemon","console","log","id","name","img","types","attack"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,CAAP,MAAc,mCAAd;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACzB,MAAIC,QAAQ,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,gBAAlB,CAA1B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMe,kBAAkB,GAAGJ,WAAW,GAAGE,eAAzC;AACA,QAAMG,mBAAmB,GAAGD,kBAAkB,GAAGF,eAAjD;AACA,MAAIL,QAAJ,EACE,IAAIS,eAAe,GAAGT,QAAQ,CAACU,KAAT,CACpBF,mBADoB,EAEpBD,kBAFoB,CAAtB;;AAIF,QAAMI,QAAQ,GAAIC,UAAD,IAAgB;AAC/BR,IAAAA,cAAc,CAACQ,UAAD,CAAd;AACD,GAFD;;AAIA,MAAIC,QAAQ,GAAGvB,WAAW,EAA1B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,QAAQ,CAACpB,OAAO,EAAR,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,GAAG,EAAEK,IAA1B;AAAgC,QAAA,GAAG,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,uBAAZ;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAED,CAAC,CAACiB,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,QAAD;AACE,MAAA,cAAc,EAAET,eADlB;AAEE,MAAA,QAAQ,EAAEL,QAAQ,CAACe,MAFrB;AAGE,MAAA,QAAQ,EAAEJ;AAHZ;AAAA;AAAA;AAAA;AAAA,YARF,eAaE;AAAK,MAAA,SAAS,EAAEd,CAAC,CAACmB,KAAlB;AAAA,gBACGP,eAAe,CAACQ,GAAhB,CAAqBC,OAAD,IAAa;AAChCC,QAAAA,OAAO,CAACC,GAAR,CAAYX,eAAZ;AACA,4BACE;AAAA,iCACE,QAAC,OAAD;AACE,YAAA,EAAE,EAAES,OAAO,CAACG,EADd;AAEE,YAAA,IAAI,EAAEH,OAAO,CAACI,IAFhB;AAGE,YAAA,GAAG,EAAEJ,OAAO,CAACK,GAHf;AAIE,YAAA,KAAK,EAAE,WAAWL,OAAO,CAACM,KAAnB,GAA2B,GAJpC;AAKE,YAAA,MAAM,EAAEN,OAAO,CAACO;AALlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAbA;AADH;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GApDe1B,Q;UACCR,W,EAcAD,W;;;KAfDS,Q;AAsDhB,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { getPoke } from \"../actions/index\";\nimport Pokemon from \"./Pokemon\";\nimport Paginado from \"./Paginado\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"../components/Pokemons.module.css\";\nimport logo from \"../img/Pokemon-Logo.png\";\n\nexport function Pokemons() {\n  var pokemons = useSelector((state) => state.filteredPokemons);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(12);\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  if (pokemons)\n    var currentPokemons = pokemons.slice(\n      indexOfFirstPokemon,\n      indexOfLastPokemon\n    );\n  const paginado = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPoke());\n  }, []);\n\n  return (\n    <div>\n      <ul className=\"ul\">\n        <img className=\"img\" src={logo} alt=\"\" />\n\n        <NavLink to=\"/pokemons/create/poke\">\n          <button className={s.button}>Create</button>\n        </NavLink>\n      </ul>\n      <Paginado\n        pokemonPerPage={pokemonsPerPage}\n        pokemons={pokemons.length}\n        paginado={paginado}\n      />\n      <div className={s.cards}>\n        {currentPokemons.map((pokemon) => {\n          console.log(currentPokemons);\n          return (\n            <div>\n              <Pokemon\n                id={pokemon.id}\n                name={pokemon.name}\n                img={pokemon.img}\n                types={\"Type: \" + pokemon.types + \" \"}\n                attack={pokemon.attack}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Pokemons;\n"]},"metadata":{},"sourceType":"module"}